import { type NextPage } from "next";
import Head from "next/head";
import { api } from "../utils/api";
import useAuth, { UUID_KEY } from "../hooks/useAuth";
import { useRouter } from "next/router";

const Score: NextPage = () => {
  // const { data: ranking } = api.question.ranking.useQuery();
  const { retryUser } = useAuth();
  const uuid = "1";
  const ranking = [
    { uuid: "1", nickname: "닉네임1", score: 6 },
    { uuid: "2", nickname: "닉네임2", score: 5 },
  ];
  const meIndex = ranking.findIndex((ele) => ele.uuid === uuid);
  const me = ranking[meIndex];

  const router = useRouter();
  const retry = () => {
    retryUser();
    void router.push("/questions");
  };

  return (
    <>
      <Head>
        <title>점수 - NooN</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <p>닉네임 님, 총 {me?.score}벌</p>
        <p>
          {ranking.length}명 중에 {meIndex + 1}등!
        </p>
        <button onClick={retry}>다시 시작하기</button>
      </main>
      <style jsx>{`
        button {
          border: 1px solid black;
        }
      `}</style>
    </>
  );
};

export default Score;
